title SteelSensor - ICS 499 Capstone, Iteration 2

note left of User: Compare/Upload Image
User->View: index(request) - GET
View->User: return render(index.html)
User->User: Browse/Select Image
User->User: Select matching threshold
opt User is logged in
    User->User: Select Database to Compare/Upload
    User->User: Choose whether or not to save the image
end
User->View: results(request) - POST
View->FileSystem: Save Image Locally
FileSystem->View:
View->Database: Generate Image Fingerprint
Database->View:
View->Database: Search for similar fingerprints
Database->View: Results

opt User is not logged in, or user has selected to not save the image
    View->Database: Delete Image
    Database->View:
    View->FileSystem: Delete Image
    FileSystem->View:
end
View->User: return render(results.html)


title SteelSensor - ICS 499 Capstone, Iteration 2

note right of User: User must be logged in.

note left of User: Add Database
User->View: createdb(request) - GET
View->User: return render(createdb.html)
User->User: Enter new Database Name. (Must be unique per-user.)
User->View: Submit Form (POST)
View->UserDatabase: Create()
UserDatabase->View: Return
View->User: return render(index.html)


title SteelSensor - ICS 499 Capstone, Iteration 2

note left of User: Delete Image
User->View: browse(request) - GET
View->Database: Request list of images owned by User
Database->View: results
View->User: return render(browse.html)
User->User: User looks at images.
User->View: Clicks Delete Link (GET w/ Parameter)
View->Database: Delete Requested Image Record
Database->View: Return
View->User: return render(browse.html)

title SteelSensor - ICS 499 Capstone, Iteration 2

note right of User: User must be logged in.

note left of User: Remove Database
User->View: removedb(request) - GET
View->UserDatabase: Request list of databases owned by current user
UserDatabase->View: return data
View->User: return render(removedb.html)
User->User: User selects database to remove.
User->View: Submit Form
View->UserDatabase: delete()
UserDatabase->View: return
View->User: return render(index.html)


